name: ‚¨ÜÔ∏è Update OPML in Gist

on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:

permissions: {}

jobs:
  Update:
    runs-on: Ubuntu-Latest
    timeout-minutes: 1

    steps:
      - name: ü¶ï Setup Deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3

      - name: üì¶ Get the Latest Version
        id: opml-generator
        run: |
          version="$(curl https://jsr.io/@5ouma/opml-generator/meta.json | jq -r '.latest')"
          echo "version=$version" >>"$GITHUB_OUTPUT"

      - name: ü´ô Cache Deno Dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            ~/.deno
            ~/.cache/deno
          key: ${{ runner.os }}-opml-generator-${{ steps.opml-generator.outputs.version }}

      - name: ‚¨áÔ∏è Download the TOML and OPML Repository
        env:
          TOML_GIST_ID: ${{ secrets.TOML_GIST_ID }}
          OPML_GIST_ID: ${{ secrets.OPML_GIST_ID }}
        run: |
          git clone "https://gist.github.com/$TOML_GIST_ID.git" feeds
          git clone "https://gist.github.com/$OPML_GIST_ID.git" outputs

      - name: üß∞ Generate OPML File
        run: deno run -A jsr:@5ouma/opml-generator --feeds=./feeds/feeds.toml --outputs=./outputs

      - name: ‚¨ÜÔ∏è Upload OPML File
        env:
          OPML_GIST_ID: ${{ secrets.OPML_GIST_ID }}
          GH_TOKEN: ${{ secrets.TOKEN }}
        run: |
          git -C 'outputs' add -AN
          while read -r file; do
            gh gist edit "$OPML_GIST_ID" "./outputs/$file" -a "./outputs/$file"
          done < <(git -C 'outputs' diff --name-only HEAD)
