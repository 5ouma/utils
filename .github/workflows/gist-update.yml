name: ‚¨ÜÔ∏è Update OPML in Gist

on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:

jobs:
  Update:
    runs-on: Ubuntu-Latest

    steps:
      - name: ü¶ï Setup Deno
        uses: denoland/setup-deno@4606d5cc6fb3f673efd4f594850e3f4b3e9d29cd # 2.0.0

      - name: üì¶ Get the Latest Version
        id: opml-generator
        run: |
          version="$(curl https://api.jsr.io/scopes/5ouma/packages/opml-generator | jq -r '.latestVersion')"
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: ü´ô Cache Deno Dependencies
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: |
            ~/.deno
            ~/.cache/deno
          key: ${{ runner.os }}-opml-generator-${{ steps.opml-generator.outputs.version }}
          restore-keys: ${{ runner.os }}-opml-generator-

      - name: ‚¨áÔ∏è Download the TOML and OPML Repository
        run: |
          git clone "https://gist.github.com/${{ secrets.TOML_GIST_ID }}.git" feeds
          git clone "https://gist.github.com/${{ secrets.OPML_GIST_ID }}.git" outputs

      - name: üß∞ Generate OPML File
        run: deno run -A jsr:@5ouma/opml-generator --feeds=./feeds/feeds.toml --outputs=./outputs

      - name: ‚¨ÜÔ∏è Upload OPML File
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}
        run: |
          git -C 'outputs' add -AN
          while read -r file; do
            gh gist edit ${{ secrets.OPML_GIST_ID }} "./outputs/$file" -a "./outputs/$file"
          done < <(git -C 'outputs' diff --name-only HEAD)
