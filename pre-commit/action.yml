name: 🚸 pre-commit
description: Check the code with pre-commit hooks

inputs:
  token:
    description: GitHub token
    required: false

runs:
  using: composite

  steps:
    - name: 🚚 Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false

    - name: 🐍 Setup Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0

    - name: 🚸 Install pre-commit
      run: pip install pre-commit
      shell: bash

    - name: "#️⃣ Download pre-commit hooks"
      id: hooks
      if: ${{ hashFiles('./.pre-commit-config.yaml') == '' }}
      run: |
        curl -O "https://raw.githubusercontent.com/5ouma/utils/$ACTION_REF/.pre-commit-config.yaml"
        echo 'downloaded=true' | tee -a "$GITHUB_OUTPUT"
      shell: bash
      env:
        ACTION_REF: ${{ github.action_ref }}

    - name: 🫙 Cache pre-commit dependencies
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('./.pre-commit-config.yaml') }}
        restore-keys: ${{ runner.os }}-pre-commit-

    - name: 🚸 Run pre-commit
      run: pre-commit run -a
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: 🧹 Clean up unused hooks
      if: ${{ always() }}
      run: pre-commit gc
      shell: bash

    - name: 🗑️ Remove downloaded hooks
      if: ${{ steps.hooks.outputs.downloaded == 'true' }}
      run: rm .pre-commit-config.yaml
      shell: bash

    - name: 🚸 Run pre-commit-ci-lite
      if: ${{ always() }}
      uses: pre-commit-ci/lite-action@5d6cc0eb514c891a40562a58a8e71576c5c7fb43 # v1.1.0
      with:
        msg: "chore(fix): Auto fixes by pre-commit hooks"
